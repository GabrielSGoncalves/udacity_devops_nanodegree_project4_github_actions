name: Frontend CD

on:
  push:
    branches:
      - main
    paths:
      - 'starter/frontend/**'
  workflow_dispatch:

env:
  AWS_REGION: us-east-1
  ECR_REPOSITORY: frontend_ecr_repo
  EKS_CLUSTER: eks_cluster_project4
  REACT_APP_MOVIE_API_URL: http://localhost:5000

jobs:
  
  test:
    name: Run Tests
    runs-on: ubuntu-latest
    environment: project4_movie_picture
    permissions:
      id-token: write
      contents: read
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          
      - name: Install Dependencies
        working-directory: starter/frontend
        run: npm ci
        
      - name: Run Tests
        working-directory: starter/frontend
        run: npm test

  build-and-deploy:
    name: Build and Deploy
    needs:
      - lint
      - test
    runs-on: ubuntu-latest
    environment: project4_movie_picture
    permissions:
      id-token: write
      contents: read
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Build the docker image
        run: |
          IMAGE_NAME=${{ secrets.ECR_REPOSITORY }}
          docker build \
            --build-arg REACT_APP_MOVIE_API_URL=$REACT_APP_MOVIE_API_URL \
            -t $IMAGE_NAME:${GITHUB_SHA::7} \
            .

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2
      
      - name: Push to Amazon ECR
        run: |
          docker tag $IMAGE_NAME:${GITHUB_SHA::7} $AWS_ACCOUNT_ID.dkr.ecr.$AWS_REGION.amazonaws.com/$ECR_REPOSITORY:${GITHUB_SHA::7}
          docker push $AWS_ACCOUNT_ID.dkr.ecr.$AWS_REGION.amazonaws.com/$ECR_REPOSITORY:${GITHUB_SHA::7}

      - name: Configure kubectl
        run: |
          aws eks update-kubeconfig --name $EKS_CLUSTER --region $AWS_REGION

      - name: Deploy to EKS
        run: |
          kubectl set image deployment/frontend frontend=$AWS_ACCOUNT_ID.dkr.ecr.$AWS_REGION.amazonaws.com/$IMAGE_NAME:${GITHUB_SHA::7}
          kubectl rollout status deployment/frontend

      - name: Get Frontend Service URL
        run: |
          kubectl get svc -A
